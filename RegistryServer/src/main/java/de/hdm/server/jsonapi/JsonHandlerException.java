/*******************************************************************************
 * Copyright 2016-2018 Research group REMEX, Hochschule der Medien (Stuttgart, Germany)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.hdm.server.jsonapi;

import de.hdm.exceptions.RegistryServerException;

/**
 * This exception is thrown, if an error in relation to converting to and from JSON occurs. For example this may happen,
 * if the JSON data is not well formed or a required field is missing.
 * 
 * This class is thread safe.
 * 
 * @author Tobias Ableitner
 *
 */
public class JsonHandlerException extends RegistryServerException {

	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// attributes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	/**
	 * Generated serial version UID.
	 */
	private static final long serialVersionUID = 7631468217335589844L;




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// constructors
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	/**
	 * Creates a new {@link JsonHandlerException} without a user message and an original exception.
	 * 
	 * @param message
	 *            the error message.
	 */
	public JsonHandlerException(String message) {
		this(message, null);
	}

	/**
	 * Creates a new {@link JsonHandlerException} without a user message but an original exception. The original
	 * exception is an exception, which raises this exception and was caught before throwing this exception.
	 * 
	 * @param message
	 *            the error message.
	 * @param originalException
	 *            the exception which raised this error message
	 */
	public JsonHandlerException(String message, Exception originalException) {
		this(message, originalException, null);
	}

	/**
	 * Creates a new {@link JsonHandlerException} with user message and original exception. The user message is an error
	 * message which can be shown to the user. The original exception is an exception, which raises this exception and
	 * was caught before throwing this exception.
	 * 
	 * @param message
	 *            the error message
	 * @param originalException
	 *            the exception which raised this error message
	 * @param userMessage
	 *            an error message which can be shown to the user
	 */
	public JsonHandlerException(String message, Exception originalException, String userMessage) {
		super(message, originalException, userMessage);
	}




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// getters and setters
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// abstract methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// override methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// public methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// protected methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// private methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// inner classes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

}
