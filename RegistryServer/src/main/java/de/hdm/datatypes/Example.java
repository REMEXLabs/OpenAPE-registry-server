/*******************************************************************************
 * Copyright 2016-2018 Research group REMEX, Hochschule der Medien (Stuttgart, Germany)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.hdm.datatypes;

/**
 * This class is used to define an example of a concept.
 * 
 * This class is thread safe.
 * 
 * @author Tobias Ableitner
 *
 */
public class Example extends Content implements IExample {

	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// attributes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// constructors
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

	/**
	 * Creates a new Example and set's the value of {@link Content#id} to -1. This constructor should be used, to
	 * instantiate examples, which are not already stored in the database.
	 * 
	 * @param languageCode
	 *            the language code of the example's language. If the example is not language specific, it can be null.
	 *            But if it is empty an {@link IllegalArgumentException} will be thrown.
	 * @param conceptId
	 *            the concept's id to which the example belongs. It must not be null or empty. Otherwise an
	 *            {@link IllegalArgumentException} will be thrown.
	 * @param example
	 *            the example it self or in other words, the example's value. It can be empty. But if it null, an
	 *            {@link IllegalArgumentException} will be thrown.
	 */
	public Example(String languageCode, String conceptId, String example) {
		super(languageCode, conceptId, example);
	}

	/**
	 * Creates a new Example and set's the value of {@link Content#id} to -1. This constructor should be used, to
	 * instantiate examples, which are already stored in the database.
	 * 
	 * @param id
	 *            the id of the example in the database. It must be greater equals 1. Otherwise an
	 *            {@link IllegalArgumentException} will be thrown.
	 * @param languageCode
	 *            the language code of the example's language. If the example is not language specific, it can be null.
	 *            But if it is empty an {@link IllegalArgumentException} will be thrown.
	 * @param conceptId
	 *            the concept's id to which the example belongs. It must not be null or empty. Otherwise an
	 *            {@link IllegalArgumentException} will be thrown.
	 * @param example
	 *            the example it self or in other words, the example's value. It can be empty. But if it null, an
	 *            {@link IllegalArgumentException} will be thrown.
	 */

	public Example(int id, String languageCode, String conceptId, String example) {
		super(id, languageCode, conceptId, example);
	}




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// getters and setters
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// abstract methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// override methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// public methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// protected methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// private methods
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************




	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************
	// inner classes
	// *********************************************************************************************************************************************
	// *********************************************************************************************************************************************

}
