/*******************************************************************************
 * Copyright 2016-2018 Research group REMEX, Hochschule der Medien (Stuttgart, Germany)
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package de.hdm.datatypes;

import de.hdm.helpers.Checker;

/**
 * This class defines a group member. Therefore it contains the user's id {@link IUser#getId()} and a flag, whether this
 * user is only a member or also an admin of the group. The group member will be stored in a list of the group
 * {@link IGroup#getMembers()}. Thus this class does not contain a group id {@link IGroup#getId()}.
 * 
 * This class is thread safe.
 * 
 * @author Tobias Ableitner
 *
 */
public class GroupMember implements IGroupMember {

    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // attributes
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************

    /**
     * The members user id {@link IUser#getId()}.
     */
    private int userId;

    /**
     * True if the member is an admin of this group and false if not.
     */
    private boolean groupAdmin;




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // constructors
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************

    /**
     * Creates a new group member.
     * 
     * @param userId
     *            the user's id, who will be the group member. It must be greater equals 1. Otherwise an
     *            {@link IllegalArgumentException} will
     *            be thrown.
     * @param groupAdmin
     *            flag whether the group member should be an group admin (true) of the {@link Group} or not (false).
     */
    public GroupMember(int userId, boolean groupAdmin) {
        this.setUserId(userId);
        this.setGroupAdmin(groupAdmin);
    }




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // getters and setters
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************

    /*
     * (non-Javadoc)
     * 
     * @see de.hdm.datatypes.IGroupMember#getUserId()
     */
    @Override
    public int getUserId() {
        return this.userId;
    }

    /*
     * (non-Javadoc)
     * 
     * @see de.hdm.datatypes.IGroupMember#setUserId(int)
     */
    @Override
    public void setUserId(int userId) {
        Checker.checkUserId(userId);
        this.userId = userId;
    }

    /*
     * (non-Javadoc)
     * 
     * @see de.hdm.datatypes.IGroupMember#isGroupAdmin()
     */
    @Override
    public boolean isGroupAdmin() {
        return this.groupAdmin;
    }

    /*
     * (non-Javadoc)
     * 
     * @see de.hdm.datatypes.IGroupMember#setGroupAdmin(boolean)
     */
    @Override
    public void setGroupAdmin(boolean groupAdmin) {
        this.groupAdmin = groupAdmin;
    }




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // abstract methods
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // override methods
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // public methods
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // protected methods
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // private methods
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************




    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************
    // inner classes
    // *********************************************************************************************************************************************
    // *********************************************************************************************************************************************

}
